<NumberField>:
    canvas.before:
        Color:
            rgba: self.bgcolor
        Rectangle:
            size: self.width, self.height
            pos: self.pos

        Color:
            rgba: 0.5, 0.5, 0.5, 1
        Line:
            width: 1
            rectangle: (self.x, self.y, self.width, self.height)

    halign: "center"
    valign: "middle"
    color: 0, 0, 0, 1
    font_size: "27sp"

<SudokuGrid>:
    #canvas.before:
    #    Color:
    #        rgba: 1, 1, 1, 1
    #    Rectangle:
    #        size: self.width, self.height
    #        pos: self.pos

    canvas.after:
        Color:
            rgba: 0, 0, 0, 1
        Line:
            width: 1.5
            rectangle: (self.x, self.y, self.width, self.height)
        Line:
            width: 1.5
            rectangle: (self.x, self.y + self.height / 3, self.width, self.height / 3)
        Line:
            width: 1.5
            rectangle: (self.x + self.width / 3, self.y, self.width / 3, self.height)

<SudokuWidget>:
    orientation: "vertical"

    BoxLayout:
        orientation: "horizontal"
        size_hint: (1, 0.4)

        Label:
            size_hint: (0.8, 1)
            halign: 'left' # is ignored
            text: "Sudoku"

        # Settings button
        # Button:
            # size_hint: (0.2, 1)
            # text: "Settings"
            # on_release: app.open_settings()

        # Help Dropdown:
        BoxLayout:
            size_hint: (0.2, 1)
        
            Button:
                id: help_button
                # size_hint: (0.2, 1)
                text: "Help"
                on_release: help_dropdown.open(self)
                size_hint_y: None
                height: self.parent.height

            DropDown:
                id: help_dropdown
                on_parent: self.dismiss()

                Button:
                    font_size: "9sp"
                    text: "* 2 3\n4 5 6\n7 8 9"
                    size_hint_y: None
                    height: help_button.height
                    on_release: grid.auto_candidates(), help_dropdown.select(self)

                Button:
                    text: "Solve\nfield"
                    size_hint_y: None
                    height: help_button.height
                    on_release: grid.solve_field(), help_dropdown.select(self)

                Button:
                    text: "Solve\nall"
                    size_hint_y: None
                    height: help_button.height
                    on_release: grid.solve(), help_dropdown.select(self)
        

        # Settings Button
        # Button:
            # text: "Settings"
            # on_release: app.open_settings()

        # Menu Dropdown
        # BoxLayout:
            # size_hint: (0.2, 1)
        
            # Button:
                # id: menu_button
                # text: "Menu"
                # on_release: menu_dropdown.open(self)
                # size_hint_y: None
                # height: self.parent.height

            # DropDown:
                # id: menu_dropdown
                # on_parent: self.dismiss()
                # on_select: menu_button.text = '{}'.format(args[1])

                # Button:
                    # text: "new"
                    # size_hint_y: None
                    # height: menu_button.height
                    
                # Button:
                    # text: "old"
                    # size_hint_y: None
                    # height: menu_button.height

    SudokuGrid:
        id: grid
        size_hint: (None, None)
        width: self.parent.width
        height: self.width

    # Slider:
        # min: -1
        # max: 0
        # value: 0
        # step: 1
        # size_hint: (1, 0.2)

    BoxLayout:
        orientation: "horizontal"
        size_hint: (1, 0.2)

        NumberButton:
            text: "1"
            on_press: grid.enter_number(int(self.text))
        NumberButton:
            text: "2"
            on_press: grid.enter_number(int(self.text))
        NumberButton:
            text: "3"
            on_press: grid.enter_number(int(self.text))
        NumberButton:
            text: "4"
            on_press: grid.enter_number(int(self.text))
        NumberButton:
            text: "5"
            on_press: grid.enter_number(int(self.text))
        NumberButton:
            text: "6"
            on_press: grid.enter_number(int(self.text))
        NumberButton:
            text: "7"
            on_press: grid.enter_number(int(self.text))
        NumberButton:
            text: "8"
            on_press: grid.enter_number(int(self.text))
        NumberButton:
            text: "9"
            on_press: grid.enter_number(int(self.text))
        NumberButton:
            text: " "
            on_press: grid.enter_number(0)

    Label:
        size_hint: (1, 0.4)
        # text: "Hint: double tap a field to edit candidates."

<NumberButton@Button>:
    size_hint: (1.0 / len(self.parent.children), 1)
